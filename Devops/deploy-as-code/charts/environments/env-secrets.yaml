secrets:
    # update the postgres db credentials
    db:
        username: <db_username>
        password: pgrdemo123
        flywayUsername: <db_username>
        flywayPassword: pgrdemo123
    # To work Filestore service add the IAM user details which has access on the filestore s3 bucket.
    user:
        username: admin
        password: eGov@123
    # To work egov-enc service add the details
    egov-enc-service:
        master_password: demo
        master_salt: q7.fr.cr
        master_initialvector: 9J&asfgrU-H2
    # To work email notification service add the sms provider details
    egov-notification-mail:
        mailsenderusername: demo@demo
        mailsenderpassword: demo
    # To work sms notification service add the sms provider details
    egov-notification-sms:
        username: demo
        password: demo
    # To work pg service add your respective bank details
    egov-pg-service:
        axis_merchant_accesscode: demo
        axis_merchant_id: demo
        axis_merchant_pwd: demo
        axis_merchant_secretkey: demo
        axis_merchant_user: demo
        payu_merchant_key: demo
        payu_merchant_salt: demo
    # To work Location service add your gmap key
    egov-location:
        gmapskey: jbsdbvxmbsmnx
    # Add finance service details
    egov-si-microservice:
        si-microservice-user: SIFINANCE
        si-microservice-password: eGov@123
        mail-sender-password: demo
    # Add edcr service details
    egov-edcr-notification:
        edcr-mail-username: demo@demo.com
        edcr-mail-password: demo
        edcr-sms-username: demo
        edcr-sms-password: demo
    # Add chatbot details
    chatbot:
        valuefirst-username: demo
        valuefirst-password: demo
    egov-user-chatbot:
        citizen-login-password-otp-fixed-value: "546941"
    kafka:
        clusterID: HshRPdVrWoB4kuTdEbawtq
    elasticsearch:
        password: 8fwbD6HbJh6HU0oddsHm8TEI
    # To work oauth2-proxy service, create and add your github OAuth Apps details
    oauth2-proxy:
        cookieSecret: qwgethjymnbv
        clientSecret: 3a08079easd9d8055470475696fd3baad5292
        clientID: QVbnq0L8npoyfxZs96wtBg==
    # To work pgadmin service add details
    pgadmin:
        admin-email: demo@demo.com
        admin-password: demo
        read-email: demo@demo.com
        read-password: demo
    # To clone the config and mdms repos, Create github user and add your ssh private key below. This private should have access to config and mdms repo.
    git-sync:
        ssh: |-
            -----BEGIN OPENSSH PRIVATE KEY-----
            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
            -----END OPENSSH PRIVATE KEY-----
        known_hosts: github.com ssh-rsa AAAAB3NzaC1yc2EAAAADAQABAAABgQCj7ndNxQowgcQnjshcLrqPEiiphnt+VTTvDP6mHBL9j1aNUkY4Ue1gvwnGLVlOhGeYrnZaMgRK6+PKCUXaDbC7qtbW8gIkhL7aGCsOr/C56SJMy/BCZfxd1nWzAOxSDPgVsmerOBYfNqltV9/hWCqBywINIR+5dIg6JTJ72pcEpEjcYgXkE2YEFXV1JHnsKgbLWNlhScqb2UmyRkQyytRLtL+38TGxkxCflmO+5Z8CSSNY7GidjMIZ7Q4zMjA2n1nGrlTDkzwDCsw+wqFPGQA179cnfGWOWRVruj16z6XyvxvjJwbz0wQZ75XK5tKSb7FNyeIEs4TT4jk+S4dhPeAUC5y+bDYirYgM4GC7uEnztnZyaVWQ7B381AK4Qdrwt51ZqExKbQpTUNn+EjqoTwvqNj4kqx5QUCI0ThS/YkOxJCXmPUWZbhjpCg56i+2aB6CmK2JGhn57K5mj0MNdBXA4/WnwH6XoPWJzK5Nyu2zB3nAZp+S5hpQs+p1vN1/wsjk=
    grafana:
        clientID: cdabbaabcdefghi
        clientSecret: 8292723f0e1d596d234abc123def456
    alertmanager:
        config:
            global:
                slack_api_url: <slack_api_url>
                resolve_timeout: 5m
            route:
                group_by:
                    - alertname
                group_wait: 30s
                receiver: slack-notification
                group_interval: 5m
                repeat_interval: 10m
                routes:
                    - receiver: slack-notification
                      match_re:
                          severity: warning|critical
                      continue: true
                    - receiver: email-notification
                      match:
                          severity: critical
            receivers:
                - name: slack-notification
                  slack_configs:
                      - channel: '<slack-channel>'
                        send_resolved: true
                        username: Alertmanager
                        title: |
                            [{{ .Status | toUpper }}{{ if eq .Status "firing" }}:{{ .Alerts.Firing | len }}{{ end }}] {{ .CommonLabels.alertname }}
                        text: |-
                            {{ range .Alerts -}}
                            {{- "\n" -}}
                            *Alert:* {{ .Annotations.summary }}
                            {{ if .Labels.severity }}*Severity:* `{{ .Labels.severity }}`{{ end }}
                            *Cluster:* {{ .Labels.cluster }}
                            *Details:*
                            {{ .Annotations.description }}
                            {{ end }}
                        color: |-
                            {{ if eq .Status "firing" -}}
                              {{ if eq .CommonLabels.severity "warning" -}}
                                warning
                              {{- else if eq .CommonLabels.severity "critical" -}}
                                danger
                              {{- else -}}
                                #439FE0
                              {{- end -}}
                            {{ else -}}
                              good
                            {{- end }}
                - name: email-notification
                  email_configs:
                      - to: <to_email>
                        from: <from_email>
                        smarthost: <smtp_host>
                        auth_username: <smtp_username>
                        auth_password: <smtp_password>
                        send_resolved: true
                        headers:
                            subject: |
                                [{{ .Status | toUpper }}{{ if eq .Status "firing" }}:{{ .Alerts.Firing | len }}{{ end }}] {{ .CommonLabels.cluster }} - {{ .CommonLabels.alertname }}
                        html: |-
                            <html>
                            <head>
                            <title>Alert!</title>
                            </head>
                            <body>
                            {{ range .Alerts }}
                            <ul>
                            <li> <b>Alert Name:</b> {{ .Labels.alertname }} </li>
                            <li> <b>Severity:</b> {{ if eq .Labels.severity "critical" }}<b style="color:red;">CRITICAL</b>{{ else if eq .Labels.severity "warning" }}<b style="color:orange;">WARNING</b>{{ else }}<b>{{ .Labels.severity | toUpper }}</b>{{ end }} </li>
                            <li> <b>Summary:-</b> {{ .Annotations.summary }} </li>
                            <li> <b>Cluster:-</b> {{ .Labels.cluster }} </li>
                            <li> <b>Details:</b>
                              <p style="margin-left: 20px; white-space: pre-wrap;"> {{ .Annotations.description }} </p>
                            </li>
                            </ul><br>
                            {{ end }}
                            </body></html>
